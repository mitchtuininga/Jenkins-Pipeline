pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building the code using Maven.'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running unit and integration tests using JUnit and Mockito.'
            }
            post {
                always {
                    emailext (
                        subject: "Unit and Integration Tests Status Email",
                        body: "The build result is: ${currentBuild.currentResult} \nLogs and details can be found at: ...",
                        to: "mitch.tuininga@gmail.com",
                        attachmentsPattern: '**/target/*.log'
                    )
                }
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Analysing the code using SonarQube.'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Performing a security scan using OWASP Dependency-Check.'
            }
            post {
                always {
                    emailext (
                        subject: "Security Scan Status Email",
                        body: "The build was a: ${currentBuild.currentResult} \nLogs: ...",
                        to: "mitch.tuininga@gmail.com",
                        attachmentsPattern: '**/security-scan/*.report'
                    )
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying the application to a staging server on AWS EC2.'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running integration tests on the staging environment using Postman.'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying the application to a production server on AWS EC2.'
            }
        }
    }
}